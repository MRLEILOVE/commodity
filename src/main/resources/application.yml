# 商品服务端
eureka:
    client:
        service-url:
            defaultZone: http://localhost:8761/eureka/
        #表示eureka client间隔多久去拉取服务注册信息，默认为30秒
        registryFetchIntervalSeconds: 5
    instance:
        # IP
        hostname: localhost
        instance-id: ${spring.application.name}:${server.port}:@project.version@
        #表示eureka client发送心跳给server端的频率，默认为30秒
        leaseRenewalIntervalInSeconds: 10
        #健康检查的地址（依赖spring-boot-starter-actuator）
        health-check-url-path: /actuator/health
# MyBatis配置
mybatis:
    mapper-locations: classpath*:/mapper/**/*.xml
    type-aliases-package: com.leigq.commodity.domain.mapper
    # 设置自动驼峰命名转换
    configuration:
      mapUnderscoreToCamelCase: true
      # 使用mybatis插入自增主键ID的数据后返回自增的ID，配合keyProperty="id"使用
      use-generated-keys: true
      # spring boot集成mybatis的方式打印sql：https://blog.csdn.net/qq_22194659/article/details/81120712
      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


# 服务器配置
server:
    # 建议不要直接写死，可以在VM options中通过-DServer.port=8080配置
    port: 8080
    tomcat:
        uri-encoding: UTF-8
spring:
    application:
        name: commodity
    # 数据源、数据库连接池druid配置
    datasource:
        # druid加密命令 java -cp .\druid-1.0.29.jar com.alibaba.druid.filter.config.ConfigTools [your password]
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALfIgF8T336J54w8zFg/rg6IhcgbzgkSLCcHBtYSPve7pdESNujOvR4kAvomaAcIl2z4A1FyJ1JcA1Kc+arPz6UCAwEAAQ==
        driver-class-name: com.mysql.jdbc.Driver
        filters: config,stat,wall,slf4j
        initialSize: 5
        maxActive: 20
        maxPoolPreparedStatementPerConnectionSize: 20
        maxWait: 60000
        minEvictableIdleTimeMillis: 300000
        minIdle: 5
        password: J6penU76h5wtt+Mkpw09yBlbHV3vX04t2THVPcexVIJtKvTiG773yNeH6LITjxPBtaWnJHAEZwItqouk6VYGfw==
        poolPreparedStatements: true
        testOnBorrow: false
        testOnReturn: false
        testWhileIdle: true
        timeBetweenEvictionRunsMillis: 60000
        type: com.alibaba.druid.pool.DruidDataSource
        url: jdbc:mysql://localhost:3306/spring_cloud?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=true&serverTimezone=UTC
        username: root
        validationQuery: SELECT 1 FROM DUAL
    # 链路监控
    zipkin:
      base-url: http://localhost:9411/
    sleuth:
      sampler:
        # 链路监控抽样百分百，默认0.1(10%)
        probability: 1

# 分页插件
pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql

# hystrix 配置
hystrix:
  command:
    # 全局设置超时时间
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
    # 为此方法单独设置超时时间
    getMsg:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000


###############Actuator监控端点##############
# 全部端口开启, 默认开启的监控路径只有3个, [/actuator/health],[/actuator/info],[/actuator]
# 参考:<a href="https://blog.csdn.net/l707268743/article/details/80999322">springboot 2.0.3中使用 actuator<a/>
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS

# 修改日志打印级别
logging:
  level:
    org.springframework.cloud.openfeign: debug


